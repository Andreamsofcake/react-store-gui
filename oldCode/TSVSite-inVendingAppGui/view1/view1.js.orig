'use strict';

var PVR_AVAILABLE = 1;

function beep() {
}

angular.module('myApp.view1', ['ngRoute'])

.config(['$routeProvider', function($routeProvider) {
  $routeProvider.when('/view1', {
    templateUrl: 'view1/view1.html',
    controller: 'View1Ctrl'
  });
}])

.controller('View1Ctrl', ['$scope', '$rootScope', '$timeout', '$location', 'TSVService', function($scope, $rootScope, $timeout, $location, TSVService) {
        TSVService.session.currentView = "View1";
        TSVService.emptyCart();
        TSVService.disablePaymentDevice();
        TSVService.session.bVendingInProcess = false;
        $scope.num = "";
        $scope.maxChars = 3;
        $rootScope.credit = TSVService.session.creditBalance;
        var resetInstructionMsgTimer;

        /*if(Object.getOwnPropertyNames(TSVService.cache.productList).length === 0){
            TSVService.cache.productList = TSVService.fetchProduct();
            for(var i=0; i<TSVService.cache.productList.length; i++) {
                TSVService.cache.prdHashTable[TSVService.cache.productList[i].productID] = TSVService.cache.productList[i];
                console.log("TSVService.cache.prdHashTable.length: "+Object.getOwnPropertyNames(TSVService.cache.prdHashTable).length);
                console.log("price: "+TSVService.cache.prdHashTable[TSVService.cache.productList[i].productID].price);
            }
        }*/

        TSVService.subscribe("notifyTSVReady", $scope, function() {
            console.log("Got event notifyTSVReady");
        });

        $scope.clear = function() {
            $scope.resetInstruction();
            $scope.num = "";
        };

        $scope.resetInstruction = function() {
            $scope.instructionMessage = "Make A Selection";
        };

        $scope.enter = function(){
            $timeout.cancel(resetInstructionMsgTimer);
            var pvr = TSVService.addToCartByCoil($scope.num);
            $scope.num = "";

            console.log("addToCartByCoil.result: "+pvr.result);
            switch (pvr.result) {
                case PVR_AVAILABLE:
                    $location.path("/view2");
                    break;

                default:
                    beep();
                    $scope.instructionMessage = "Unavailable";
                    TSVService.emptyCart();

                    resetInstructionMsgTimer = $timeout(function(){
                        console.log("Hi Ping Debug Make A Selection Timer:)");
                        $scope.resetInstruction();
                    }, 3000);
                    break;
            }
        };

        $scope.press = function(digit) {
            $scope.resetInstruction();
            if ($scope.num.length < $scope.maxChars) {
                $scope.num += digit;
            } else {
                beep();
                $scope.num = "";
                $scope.num += digit;
            }
<<<<<<< HEAD
        };
=======
            $scope.num = parseInt($scope.num).toString();
        }
>>>>>>> 7bfe72e7b2bc6578a1b6c3117a6f2f8cd56c974c

        $scope.prompt = function() {
            if ($scope.num.length != 0) {
                return $scope.num;
            }
            return "---";
        };

        $scope.resetInstruction();

        $scope.admin = function(){
            //console.log("Hi Ping Debug double-click need to go to Admin_Login");
            $timeout.cancel(resetInstructionMsgTimer);
            $location.path("/Admin_Login");
        };

        if(Object.getOwnPropertyNames(TSVService.cache.machineSettings).length === 0){
            TSVService.cache.machineSettings = TSVService.fetchAllMachineSettings();
        }
        if(Object.getOwnPropertyNames(TSVService.cache.custommachinesettings).length === 0){
            TSVService.cache.custommachinesettings = TSVService.fetchAllCustomSettings();
        }

        var idleTime = TSVService.cache.custommachinesettings.generalPageTimeout;
        startGeneralIdleTimer();

        (function ($) {
            $(document).ready(function () {
                $(document).bind('click mousemove', function() {
                    resetGeneralIdleTimer();
                });
            });
        }) (jQuery);

        function startGeneralIdleTimer(){
            TSVService.session.generalIdleTimer = $timeout(function(){
                console.log("onGeneralIdleTimeout()!");
                TSVService.onGeneralTimeout($location);
            }, idleTime);
        }

        function resetGeneralIdleTimer(){
            console.log("Hi Ping resetGeneralIdleTimer!!!!");
            killGeneralIdleTimer();
            startGeneralIdleTimer();
        }

        function killGeneralIdleTimer(){
            $timeout.cancel(TSVService.session.generalIdleTimer);
        }

        var creditBalanceHandler = function(ins, balance){
            TSVService.debug("rootScope Got event cash creditBalanceChanged: "+ins+" creditBalance: "+balance);
            $.fancybox.close();
            TSVService.session.creditBalance = balance/100.00;
            $rootScope.credit = TSVService.session.creditBalance;

            if(!TSVService.session.bVendedOldCredit){
                TSVService.checkBalance();
                $location.path("/Cash_Vending");
            }
        };

        TSVService.subscribe("creditBalanceChanged", $rootScope, creditBalanceHandler);

        function cashlessBeginSession(fundsAvailable) {
            $rootScope.fundsAvailable = ((1.0) * fundsAvailable) / 100.0;
            $(".balance").show();
        }

        function cashlessEndSession () {
            $rootScope.fundsAvailable = 0;
            $(".balance").hide();
        }

        TSVService.subscribe("cashlessBeginSession", $rootScope, cashlessBeginSession);
        TSVService.subscribe("cashlessEndSession", $rootScope, cashlessEndSession);
    }]);